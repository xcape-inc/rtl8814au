name: CI

on:
  push:
  pull_request:
    branches: [ master, v5.8.5.1 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  #IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME: xcape-inc/dkms-build-env

jobs:
  build-and-push-image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # allow access to github docker registry
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: get the current dynamic git version numbers
        id: get_versions
        run: |
          git clone https://github.com/xcape-inc/ci-tools.git --branch main --single-branch .git/ci-tools
          . .git/ci-tools/get_tag_from_git.sh > /dev/null
          echo "::set-output name=cur_version::${CUR_VERSION}"
          echo "::set-output name=long_form_cur_version::${LONG_FORM_CUR_VERSION}"

      - name: show version
        run: |
          echo Short version: ${{ steps.get_versions.outputs.cur_version }}
          echo Long version: ${{ steps.get_versions.outputs.long_form_cur_version }}

      - name: Set short sha
        id: shortsha
        run: echo "::set-output name=sha_short::${GITHUB_SHA::7}"

      - name: Set uid:gid
        id: uidgid
        run: |
          echo "::set-output name=uid::$(id -u)"
          echo "::set-output name=gid::$(id -g)"
          echo "::set-output name=uid_gid::$(id -u):$(id -g)"

      - name: Current uid:gid
        run: echo ${{ steps.uidgid.outputs.uid_gid }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-server-cache
          key: ${{ runner.os }}-buildx-server-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-server-

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=sha
            latest
          labels: |
            org.opencontainers.image.ref.name=${{ github.ref }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: docker_builder
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-server-cache
          cache-to: type=local,dest=/tmp/.buildx-server-cache-new
          # TODO: need to add the timestamp parameter
          build-args: |
            USER_UID=${{ steps.uidgid.outputs.uid }}
            USER_GID=${{ steps.uidgid.outputs.gid }}
            VERSION=${{ steps.get_versions.outputs.cur_version }}
            LONG_FORM_VERSION=${{ steps.get_versions.outputs.long_form_cur_version }}

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-server-cache
          mv /tmp/.buildx-server-cache-new /tmp/.buildx-server-cache

      - name: Build and test install package (amd64)
        run: |
          export IMAGE_VERSION=:sha-${{ steps.shortsha.outputs.sha_short }}
          FORCE_PULL=true ./docker_build.sh

      # artifact package to github
      - name: Store image artifact
        uses: actions/upload-artifact@v2
        with:
          name: debs
          path: |
            *.deb
          retention-days: 5
